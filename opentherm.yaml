esphome:
  name: opentherm
  comment: "Управление отоплением Bosch Gaz 6000 WBN 24H на основе OpenTherm"
  includes:
    - esphome-opentherm/

esp8266:
  board: d1_mini
  restore_from_flash: TRUE
  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "${devicename} Fallback"
    password: !secret wifi_password

captive_portal:
logger:
api:
ota:
#web_server:
#  port: 80


custom_component:
  - lambda: |-
      auto opentherm = new OpenthermComponent();
      return {opentherm};
    
    components:
      - id: opentherm
output:
  - platform: custom
    type: float
    lambda: |-
      OpenthermComponent *openthermComp = (OpenthermComponent*) id(opentherm);
      auto opentherm_pid_output = new OpenthermFloatOutput();
      openthermComp->set_pid_output(opentherm_pid_output);
      App.register_component(opentherm_pid_output);     
      return {opentherm_pid_output};
    outputs:
      id: pid_output

# Датчик температуры на плате, если есть
dallas:
  pin: D5
  update_interval: 60s

sensor:
  - platform: dallas
    name: "temperature_kot"  # Название датчика температуры
    index: 0

  - platform: custom
    lambda: |-    
      OpenthermComponent *openthermComp = (OpenthermComponent*) id(opentherm);
      return { 
        openthermComp->boiler_temperature, 
        openthermComp->modulation_sensor,
        openthermComp->heating_target_temperature_sensor
      };
    sensors:
    - name: Boiler Temperature
      unit_of_measurement: °C
      device_class: temperature
      accuracy_decimals: 1
      icon: "mdi:water-boiler"
    - name: "Boiler Modulation"
      id: boiler_modulation
      unit_of_measurement: "%"
      accuracy_decimals: 0
      icon: "mdi:chart-bell-curve-cumulative"
    - name: "Heating Target Temperature"
      unit_of_measurement: °C
      device_class: temperature
      accuracy_decimals: 1
      icon: "mdi:thermostat"
      
  - platform: homeassistant
    id: temperature_sensor
    entity_id: sensor.temperature_house   # датчик реальной температуры
    name: "Actual temperature"
    unit_of_measurement: °C
    device_class: temperature
  - platform: template
    id: temperature_sensor_interval
    name: "Actual temperature interval"
    lambda: |-
      return id(temperature_sensor).state;
    update_interval: 1s
  - platform: pid
    name: "PID Climate Result"
    type: RESULT    
    icon: "mdi:vector-curve"
  - platform: pid
    name: "PID Climate HEAT"
    type: HEAT    
    icon: "mdi:vector-curve"
  - platform: pid
    name: "PID Climate ERROR"
    type: ERROR    
    icon: "mdi:vector-curve"
  - platform: copy 
    source_id: boiler_modulation
    name: "Boiler power"
    filters:
      - lambda: return (x * 0.24);
    unit_of_measurement: "kW"
    device_class: "power"
    id: boiler_power
    
binary_sensor:
  - platform: custom
    lambda: |-
      OpenthermComponent *openthermComp = (OpenthermComponent*) id(opentherm);
      return {openthermComp->flame};
    binary_sensors:
    - name: "Flame"
      icon: "mdi:fire"
      
switch:
  - platform: custom
    lambda: |-
      OpenthermComponent *openthermComp = (OpenthermComponent*) id(opentherm);
      return {openthermComp->thermostatSwitch};
    switches:
      name: "Disable PID"
  - platform: template
    name: "PID Climate Autotune"
    turn_on_action:
      - climate.pid.autotune: pid_climate      

climate:
  - platform: custom
    lambda: |-
      OpenthermComponent *openthermComp = (OpenthermComponent*) id(opentherm);
      return {
        openthermComp->hotWaterClimate, 
        openthermComp->heatingWaterClimate
      };
    climates:
      - id: hot_water
        name: "Hot water"
      - id: heating_water
        name: "Heating water"
        visual:
          min_temperature: 20 °C
          max_temperature: 80 °C    
  - platform: pid
    id: pid_climate
    name: "PID Climate Controller"
    visual:
      min_temperature: 5 °C
      max_temperature: 30 °C
      temperature_step: 0.5 °C
    sensor: temperature_sensor_interval
    default_target_temperature: 23°C
    heat_output: pid_output
    control_parameters:
      kp: 0.38197
      ki: 0.01012
      kd: 3.60387
